CREATE TABLE addresses
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    street_address    VARCHAR(255)                            NOT NULL,
    city              VARCHAR(255)                            NOT NULL,
    postal_code       VARCHAR(255)                            NOT NULL,
    country           VARCHAR(255)                            NOT NULL,
    state_or_province VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_addresses PRIMARY KEY (id)
);

CREATE TABLE bookings
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    property_id    BIGINT                                  NOT NULL,
    user_id        BIGINT                                  NOT NULL,
    start_date     date                                    NOT NULL,
    end_date       date                                    NOT NULL,
    total_price    DECIMAL                                 NOT NULL,
    booking_date   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    booking_status VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_bookings PRIMARY KEY (id)
);

CREATE TABLE images
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    property_id BIGINT                                  NOT NULL,
    image_url   VARCHAR(255)                            NOT NULL,
    description VARCHAR(255),
    upload_date TIMESTAMP WITH TIME ZONE DEFAULT NOW()  NOT NULL,
    CONSTRAINT pk_images PRIMARY KEY (id)
);

CREATE TABLE payments
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id        BIGINT                                  NOT NULL,
    booking_id     BIGINT                                  NOT NULL,
    payment_date   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    amount         DECIMAL                                 NOT NULL,
    payment_method VARCHAR(255)                            NOT NULL,
    payment_status VARCHAR(255)                            NOT NULL,
    transaction_id VARCHAR(255),
    CONSTRAINT pk_payments PRIMARY KEY (id)
);

CREATE TABLE properties
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_id        BIGINT                                  NOT NULL,
    title           VARCHAR(255)                            NOT NULL,
    description     TEXT,
    property_type   VARCHAR(255)                            NOT NULL,
    area            DOUBLE PRECISION                        NOT NULL,
    number_of_rooms INTEGER,
    price_per_day   DECIMAL(10, 2)                          NOT NULL,
    availability    BOOLEAN                                 NOT NULL,
    creation_date   TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    address_id      BIGINT,
    CONSTRAINT pk_properties PRIMARY KEY (id)
);

CREATE TABLE reviews
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id     BIGINT                                  NOT NULL,
    property_id BIGINT                                  NOT NULL,
    booking_id  BIGINT                                  NOT NULL,
    rating      INTEGER                                 NOT NULL,
    comment     VARCHAR(255),
    review_date TIMESTAMP WITHOUT TIME ZONE             NOT NULL,
    CONSTRAINT pk_reviews PRIMARY KEY (id)
);

CREATE TABLE roles
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(255)                            NOT NULL,
    description VARCHAR(255),
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE user_roles
(
    role_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT pk_user_roles PRIMARY KEY (role_id, user_id)
);

CREATE TABLE users
(
    id                      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username                VARCHAR(50)                             NOT NULL,
    password                VARCHAR(255)                            NOT NULL,
    email                   VARCHAR(100)                            NOT NULL,
    first_name              VARCHAR(50),
    last_name               VARCHAR(50),
    phone_number            VARCHAR(15),
    registration_date       date,
    account_non_expired     BOOLEAN                                 NOT NULL,
    account_non_locked      BOOLEAN                                 NOT NULL,
    credentials_non_expired BOOLEAN                                 NOT NULL,
    enabled                 BOOLEAN                                 NOT NULL,
    address_id              BIGINT,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE payments
    ADD CONSTRAINT uc_payments_booking UNIQUE (booking_id);

ALTER TABLE properties
    ADD CONSTRAINT uc_properties_address UNIQUE (address_id);

ALTER TABLE reviews
    ADD CONSTRAINT uc_reviews_booking UNIQUE (booking_id);

ALTER TABLE roles
    ADD CONSTRAINT uc_roles_name UNIQUE (name);

ALTER TABLE users
    ADD CONSTRAINT uc_users_address UNIQUE (address_id);

ALTER TABLE users
    ADD CONSTRAINT uc_users_email UNIQUE (email);

ALTER TABLE users
    ADD CONSTRAINT uc_users_username UNIQUE (username);

ALTER TABLE bookings
    ADD CONSTRAINT FK_BOOKINGS_ON_PROPERTY FOREIGN KEY (property_id) REFERENCES properties (id);

ALTER TABLE bookings
    ADD CONSTRAINT FK_BOOKINGS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE images
    ADD CONSTRAINT FK_IMAGES_ON_PROPERTY FOREIGN KEY (property_id) REFERENCES properties (id);

ALTER TABLE payments
    ADD CONSTRAINT FK_PAYMENTS_ON_BOOKING FOREIGN KEY (booking_id) REFERENCES bookings (id);

ALTER TABLE payments
    ADD CONSTRAINT FK_PAYMENTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE properties
    ADD CONSTRAINT FK_PROPERTIES_ON_ADDRESS FOREIGN KEY (address_id) REFERENCES addresses (id);

ALTER TABLE properties
    ADD CONSTRAINT FK_PROPERTIES_ON_OWNER FOREIGN KEY (owner_id) REFERENCES users (id);

ALTER TABLE reviews
    ADD CONSTRAINT FK_REVIEWS_ON_BOOKING FOREIGN KEY (booking_id) REFERENCES bookings (id);

ALTER TABLE reviews
    ADD CONSTRAINT FK_REVIEWS_ON_PROPERTY FOREIGN KEY (property_id) REFERENCES properties (id);

ALTER TABLE reviews
    ADD CONSTRAINT FK_REVIEWS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_ADDRESS FOREIGN KEY (address_id) REFERENCES addresses (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_role FOREIGN KEY (role_id) REFERENCES roles (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_user FOREIGN KEY (user_id) REFERENCES users (id);